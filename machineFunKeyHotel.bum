machine machineFunKeyHotel sees contexteHumain

variables
	cli
	resid


invariants
	@inv1: cli ⊆ PERSONNE
	@inv2: resid ⊆ PERSONNE
	// Si moyen trouver une manière de gérer que resid ⊆ cli


events
  event INITIALISATION
  begin
	@act1: resid ≔ ∅
	@act2: cli ≔ ∅
// Au début le nombre de client et de résidents sont zéro
  end


  event réserver
// Lorsqu'une personne quelconque a réservé ça implique quelle soit ajoutée
// à l'ensemble clients.
	any potentiel_client
	where
	  @gr1: potentiel_client ∈  PERSONNE∖ cli
	then
	  @act1: cli ≔ cli ∪ {potentiel_client}
  end


  event checkerin
// Lorsqu'un client a passé l'étape de check-in, cela implique qu'il est ajouté
// à l'ensemble résident
	any futur_resident
	where
	  @gr1: futur_resident ∈ cli
	then
	  @act1: resid ≔ resid ∪ {futur_resident}
  end


  event checkerout
// Lorsqu'un résident a procédé au check out cela implique qu'il est retiré
// et de l'ensemble client et de l'ensemble résident.
	any resident_actuel
	where
	  @gr1: resident_actuel ∈ resid
	then
	  @act1: resid ≔ resid ∖ {resident_actuel}
	  @act2: cli ≔ cli ∖ {resident_actuel}
  end


end
